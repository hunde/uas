<?php

/**
 * BaseEmailAlias
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $local_part
 * @property integer $domainname_id
 * @property string $destination
 * @property DomainName $DomainName
 * 
 * @method string     getLocalPart()     Returns the current record's "local_part" value
 * @method integer    getDomainnameId()  Returns the current record's "domainname_id" value
 * @method string     getDestination()   Returns the current record's "destination" value
 * @method DomainName getDomainName()    Returns the current record's "DomainName" value
 * @method EmailAlias setLocalPart()     Sets the current record's "local_part" value
 * @method EmailAlias setDomainnameId()  Sets the current record's "domainname_id" value
 * @method EmailAlias setDestination()   Sets the current record's "destination" value
 * @method EmailAlias setDomainName()    Sets the current record's "DomainName" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseEmailAlias extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('email_alias');
        $this->hasColumn('local_part', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => '255',
             ));
        $this->hasColumn('domainname_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('destination', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));


        $this->index('email_alias', array(
             'fields' => 
             array(
              0 => 'local_part',
              1 => 'domainname_id',
              2 => 'destination',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DomainName', array(
             'local' => 'domainname_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}